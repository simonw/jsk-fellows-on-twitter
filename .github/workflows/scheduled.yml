name: Fetch data and deploy with Datasette

on:
  push:
  repository_dispatch:
  schedule:
    - cron:  '10 * * * *'

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repo
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - uses: actions/cache@v1
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Install sqlite3
      run: |-
        sudo apt-get install sqlite3
    - name: Create auth.json
      env:
        TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
        TWITTER_API_SECRET_KEY: ${{ secrets.TWITTER_API_SECRET_KEY }}
        TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
      run: |
        echo "{
          \"api_key\": \"$TWITTER_API_KEY\",
          \"api_secret_key\": \"$TWITTER_API_SECRET_KEY\",
          \"access_token\": \"$TWITTER_ACCESS_TOKEN\",
          \"access_token_secret\": \"$TWITTER_ACCESS_TOKEN_SECRET\",
        }" > auth.json
    - name: Create jsk.db using twitter-to-sqlite
      run: twitter-to-sqlite lists jsk.db JSKstanford --members
    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Set up Zeit Now
      run: yarn global add now
    - name: Deploy Datasette using Zeit Now
      env:
        NOW_TOKEN: ${{ secrets.NOW_TOKEN }}
      run: |-
        datasette publish now2 jsk.db \
          --token $NOW_TOKEN \
          --project jsk-fellows-on-twitter \
          --metadata metadata.json
